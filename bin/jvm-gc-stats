#!/usr/bin/env ruby

require 'getoptlong'
$: << 'lib'
require 'jvm-gc-stats'

def usage
  puts "jvm-gc-stats.rb: Tails a jvm logfile and reports its entries "
  puts
  puts "usage: jvm-gc-stats.rb [options]"
  puts "options:"
  puts "    -n              say what I would report, but don't report it"
  puts "    -P <prefix>     optional prefix for ganglia names"
  puts "    -f <file>       gc logfile to use. defaults to a file named stdout"
  puts "    -s seconds      sleep time in seconds waiting for new log lines"
  puts "    -d              turn on verbose debug output"
  puts "    -w              read the whole file from the beginning rather than tail"
  puts
end

opts = GetoptLong.new(
  [ '--help', GetoptLong::NO_ARGUMENT ],
  [ '-h', GetoptLong::NO_ARGUMENT ],
  [ '-n', GetoptLong::NO_ARGUMENT ],
  [ '-P', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '-f', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '-s', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '-d', GetoptLong::OPTIONAL_ARGUMENT ],
  [ '-w', GetoptLong::OPTIONAL_ARGUMENT ]
)

filename        = nil
report          = true
prefix          = ''
report_timeout  = 86400
tail_sleep_secs = 60
tail            = true
debug           = false

opts.each do |opt, arg|
  case opt
  when '--help'
    usage
    exit 0
  when '-h'
    usage
    exit 0
  when '-n'
    report = false
  when '-P'
    prefix = arg
  when '-f'
    filename = arg
  when '-s'
    tail_sleep_secs = arg.to_i
  when '-d'
    debug = true
  when '-w'
    tail = false
  end
end

stats = JvmGcStats::JvmGcStats.new(filename, report, prefix, report_timeout, tail_sleep_secs, tail, debug)
stats.tail
